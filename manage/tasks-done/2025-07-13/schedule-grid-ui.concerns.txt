# スケジュールグリッドUI実装 - 懸念事項

## 完了した内容
1. ScheduleGridコンポーネント（ドラッグ選択機能付き）を実装
2. ScheduleAggregateGridコンポーネント（集計表示）を実装
3. ScheduleInputLayoutコンポーネント（左右分割レイアウト）を実装
4. EventParticipateコンポーネントに新しいグリッドUIを統合
5. 既存の参加者データを取得して集計表示に反映

## 技術的な実装詳細
- Temporal APIを使用した日時処理
- ドラッグ操作による複数セルの選択/選択解除
- 参加人数に応じた色の濃淡表現
- CSV/JSONエクスポート機能
- ホバー/クリックによる参加者詳細表示

## 懸念事項

### 1. パフォーマンス最適化が未実装
- 大量のセル（例：30日×24時間×15分単位=2880セル）のレンダリングパフォーマンスが未検証
- 仮想スクロールの実装を検討すべき
- React.memoやuseMemoでの最適化が必要

### 2. タッチデバイス対応が不完全
- CSSでタッチデバイス向けのスタイルは定義したが、実際のタッチ操作（スワイプ等）は未実装
- react-use-gestureなどのライブラリ導入を検討

### 3. アクセシビリティ強化が必要
- キーボードナビゲーションが基本的なものに留まっている
- 矢印キーでのセル移動、スペースキーでの選択など、より高度な操作が必要
- WAI-ARIAの属性をより詳細に設定すべき

### 4. エラーハンドリング
- 参加者データ取得時のエラーハンドリングが基本的
- ネットワークエラー時のリトライ機能が未実装

### 5. UI/UXの改善点
- 選択中の時間帯の合計表示
- 選択をクリアする一括ボタン
- よく使われる時間帯パターン（午前中、午後、夕方など）のプリセット機能
- 時間帯のグループ選択（例：全ての月曜日の午後を選択）

### 6. データ同期
- リアルタイムでの他の参加者の更新反映は未実装
- ポーリングやWebSocketでの更新通知を検討

### 7. テスト
- コンポーネントのユニットテストが未実装
- ドラッグ操作のE2Eテストが必要
- Storybookでのインタラクションテストを追加すべき

## TODO
- [ ] React.memoやuseMemoでのパフォーマンス最適化
- [ ] 仮想スクロールの実装検討
- [ ] タッチジェスチャーの実装
- [ ] キーボードナビゲーションの強化
- [ ] ユニットテストの追加
- [ ] E2Eテストの追加
- [ ] リアルタイム同期機能の検討