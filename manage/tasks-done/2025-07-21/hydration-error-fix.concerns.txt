# ハイドレーションエラーの修正

## 問題
サインイン後に`/ja`ページでハイドレーションエラーが発生した。
EventDetailコンポーネントで、サーバー側とクライアント側でレンダリング結果が異なっていた。

## 原因
`useState`の初期値で`window`オブジェクトを使用していたため：
- サーバー側: `window`が未定義なので空文字列
- クライアント側: `window`が定義されているので実際のURL

## 修正内容
1. `useEffect`を使用してクライアント側でのみURLを設定するように変更
2. 初期値は空文字列にして、クライアント側でマウント後にURLを設定
3. コピーボタンのdisabled状態も適切に処理

## 懸念事項

### 1. 初期レンダリング時のちらつき
- URLが空文字列から実際のURLに変わる際に、UIが一瞬変化する可能性がある
- TODO: スケルトンローダーの実装を検討

### 2. SSG/SSRの最適化
- 現在の実装では、URLがクライアント側でのみ生成される
- TODO: ビルド時やサーバー側でURLを生成する方法を検討

### 3. 他のコンポーネントでの同様の問題
- 他のコンポーネントでも`window`オブジェクトを使用している箇所があるかもしれない
- TODO: 全体的なコードレビューを行い、同様の問題を洗い出す

### 4. E2Eテストの必要性
- ハイドレーションエラーは実際のブラウザ環境でしか発生しないため、E2Eテストが必要
- TODO: Playwrightなどを使用したE2Eテストの追加

### 5. 開発環境での早期発見
- Next.jsの開発モードでもハイドレーションエラーは表示されるが、見逃しやすい
- TODO: ESLintルールやカスタムhooksの作成を検討