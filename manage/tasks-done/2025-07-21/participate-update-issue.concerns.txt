# 非認証ユーザーの参加時間更新問題の修正

## 実装内容
1. submitAvailability関数にscheduleIdパラメータを追加
2. 非認証ユーザーがscheduleIdを持っている場合、そのIDで既存スケジュールを検索して更新するよう修正
3. フロントエンドからLocalStorageに保存されているscheduleIdを送信するよう修正

## 修正ファイル
- src/app/actions/schedule.ts
  - SubmitAvailabilitySchemaにscheduleIdフィールドを追加
  - 非認証ユーザーでscheduleIdがある場合の処理を追加
- src/lib/effects/hooks/use-event-participation-v2.ts
  - submitAvailability呼び出し時にscheduleIdを送信

## 懸念事項

### 1. セッションIDの変更問題
- 現在の実装では、非認証ユーザーのuserIdとしてauthState.sessionIdを使用
- セッションIDは変わる可能性があるため、既存スケジュールの検索に失敗する可能性
- TODO: 非認証ユーザーの識別方法を再検討（例：ブラウザフィンガープリントなど）

### 2. セキュリティ考慮事項
- scheduleIdを直接クライアントから受け取るため、他人のscheduleIdを指定される可能性
- 現在はイベントIDとの照合のみ実施
- TODO: より厳密な権限チェックの実装（例：IPアドレスやセッション情報との照合）

### 3. データ整合性
- 既に複数のスケジュールが作成されてしまっているユーザーのデータ
- TODO: データマイグレーションスクリプトの作成を検討

### 4. テストの追加
- 非認証ユーザーの更新フローに関するE2Eテストが必要
- ストーリーブックでの更新シナリオのテスト追加
- TODO: テストケースの充実

### 5. UXの改善
- 非認証ユーザーが複数のブラウザ/デバイスから参加する場合の考慮
- TODO: 「以前の回答を上書きしますか？」などの確認ダイアログの追加を検討

## 次のステップ
1. 本番環境でのテスト
2. セキュリティレビューの実施
3. データマイグレーションの必要性評価
4. UX改善の検討