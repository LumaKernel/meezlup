# スケジュール登録画面のグリッドUI実装

## 背景
現在のEventParticipateコンポーネントはチェックボックスリストで実装されているが、
元の設計意図とは大きく異なる。ドラッグ操作によるグリッド上での時間選択UIを実装する必要がある。

## 実装すべき機能

### 1. グリッドUIコンポーネント
- 縦軸：時間帯（イベントのtimeSlotDurationに基づく）
- 横軸：日付（曜日表示付き）
- 週の切り替わり（日曜と月曜の間）を視覚的に明確にする
- シンプルで見やすいグリッドデザイン

### 2. ドラッグ操作
- マウスドラッグで複数のセルを一度に選択/選択解除
- ドラッグ開始時のセルの状態（オン/オフ）に応じて、塗りつぶしモードを決定
  - オフのセルから開始→オンに塗りつぶし
  - オンのセルから開始→オフに塗りつぶし
- 単一クリックでトグル
- タッチデバイス対応

### 3. 左右分割レイアウト
- 左側：自分の予定入力エリア
  - グリッドUIでドラッグ選択
  - 選択状態の視覚的フィードバック
- 右側：参加者全体の集計表示
  - 参加人数に応じた色の濃淡表現
  - より多くの人が参加できる枠ほど濃い色

### 4. インタラクション
- 右側グリッドのマウスホバー
  - 左側の入力欄がその時間帯の参加者一覧表示に切り替わる
  - 参加者の名前（権限設定に応じて）を表示
- クリックでフォーカス状態
  - ホバー表示を固定
  - CSV/JSONダウンロードボタン表示
  - 「自分の予定を編集」ボタンで解除

### 5. データ構造
- 効率的な時間スロット管理
- 選択状態の永続化
- リアルタイムな集計計算

### 6. パフォーマンス最適化
- 大量のセル（30日 × 24時間 × 時間幅）の効率的なレンダリング
- ドラッグ操作の滑らかさ
- 集計計算の最適化

### 7. アクセシビリティ
- キーボード操作対応
- スクリーンリーダー対応
- 色覚異常への配慮

## 技術的検討事項

### UIライブラリ
- Mantineのグリッドコンポーネントをベースにカスタマイズ
- または専用のグリッドコンポーネントを実装
- react-dndやreact-use-gestureの活用検討

### 状態管理
- Effect.tsを活用した状態管理
- 選択状態の効率的な管理（Set or Map）
- undoやredoの実装検討

### テスト戦略
- ドラッグ操作のテスト
- 大量データでのパフォーマンステスト
- Storybookでのインタラクションテスト

## 実装ステップ

1. 基本的なグリッドコンポーネントの作成
2. セルの選択/選択解除機能
3. ドラッグ操作の実装
4. 左右分割レイアウト
5. 集計表示機能
6. ホバー/クリックインタラクション
7. データ永続化との連携
8. パフォーマンス最適化
9. アクセシビリティ対応
10. テストの実装

## 参考実装
- Google Calendar の時間選択UI
- Doodle の投票グリッド
- 調整さんの時間選択UI
